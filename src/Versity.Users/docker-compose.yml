version: '3.1'

services:
  elasticsearch:
    container_name: els
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    networks:
      - dev

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.8.0
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    networks:
      - dev

  versity-users-db:
    image: debezium/postgres:13-alpine
    environment:
      - POSTGRES_DATABASE=versity_users_dev
      - POSTGRES_USER=versity_dev
      - POSTGRES_PASSWORD=versity_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/data/db
    networks:
      - dev

  versity-users-service:
    image: jejikeh/versity.users:latest
    container_name: versity-users-service
    depends_on:
      - versity-users-db
    ports:
      - 4000:80
      - 4001:443
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ConnectionString=Host=versity-users-db;Port=5432;Username=versity_dev;Password=versity_dev;Database=versity_users_dev;
      - ASPNETCORE_ENVIRONMENT=DEVELOPMENT
      - ASPNETCORE_URLS=https://+;http://+  
      - ASPNETCORE_Kestrel__Certificates__Default__Password=versity
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - JWT__Key=06AA645D-B70D-446F-90D7-192A5C1CAA6A
      - JWT__Issuer=https://versity.users:4001
      - JWT__Audience=https://versity.users:4001
      - TEST=Hello
      - TEST_KEY=HelloKEY
      - TEST__KEY=HelloKEYTWO
    volumes:
     - ~/.aspnet/https:/https:ro
    networks:
      - dev

networks:
  dev:
    driver: bridge

volumes:
  elasticsearch-data:
  postgres-data: